<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Sequence Diagram</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
    <meta name="viewport" content="width=device-width">
</head>

<style> /* set the CSS */
    body {
        font: 12px Arial;
    }

    .tooltip {
        position: absolute;
        text-align: center;
        padding: 8px;
        background: lightsteelblue;
        border-radius: 8px;
        pointer-events: none;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function(){
        let messages = <%- JSON.stringify(messages) %>;
        renderSeq(messages);
    });

    function renderSeq(messages) {
        var classes = ["Class A", "Class B", "Class C", "Class D", "Class E", "Class F", "Class G"];

        var XPAD = 50;
        var YPAD = 20;
        var VERT_SPACE = 100;
        var VERT_PAD = 60;

        var CLASS_WIDTH = 80;
        var CLASS_HEIGHT = 40;
        var CLASS_LABEL_X_OFFSET = -25;
        var CLASS_LABEL_Y_OFFSET = 25;

        var MESSAGE_SPACE = 50;
        var MESSAGE_LABEL_X_OFFSET = -40;
        var MESSAGE_LABEL_Y_OFFSET = 70;
        var MESSAGE_ARROW_Y_OFFSET = 80;

        var CANVAS_WIDTH = 800;
        var CANVAS_HEIGHT = 600;

        // Define the div for the tooltip
        var div = d3.select("body").append("div")
            .attr("class", "tooltip")
            .style("opacity", 0);

        // Create an svg canvas
        var svg = d3.select("#drawArea")
            .append("svg")
            .attr("width", CANVAS_WIDTH)
            .attr("height", CANVAS_HEIGHT);

        // Draw vertical lines
        classes.forEach(function (c, i) {
            svg.append("line")
                .style("stroke", "#888")
                .attr("x1", XPAD + i * VERT_SPACE)
                .attr("y1", YPAD)
                .attr("x2", XPAD + i * VERT_SPACE)
                .attr("y2", YPAD + VERT_PAD + messages.length * MESSAGE_SPACE);
        });

        // Draw classes
        classes.forEach(function (c, i) {
            const x = XPAD + i * VERT_SPACE;
            svg.append("g")
                .attr("transform", "translate(" + x + "," + YPAD + ")")
                .attr("class", "first")
                .append("rect")
                .attr({x: -CLASS_WIDTH / 2, y: 0, width: CLASS_WIDTH, height: CLASS_HEIGHT})
                .style("fill", "#CCC");
        });

        // Draw class labels
        classes.forEach(function (c, i) {
            const x = XPAD + i * VERT_SPACE;
            svg.append("g")
                .attr("transform", "translate(" + x + "," + YPAD + ")")
                .attr("class", "first")
                .append("text")
                .text(function (d) {
                    return c;
                })
                .attr("dx", CLASS_LABEL_X_OFFSET)
                .attr("dy", CLASS_LABEL_Y_OFFSET);
        });

        // Draw message arrows
        messages.forEach(function (m, i) {
            const y = YPAD + MESSAGE_ARROW_Y_OFFSET + i * MESSAGE_SPACE;
            svg.append("line")
                .style("stroke", "black")
                .attr("x1", XPAD + m.start * VERT_SPACE)
                .attr("y1", y)
                .attr("x2", XPAD + m.end * VERT_SPACE)
                .attr("y2", y)
                .attr("marker-end", "url(#end)")
                .append("text")
                .text(function (d) {
                    return m.message;
                });
        });

        // Draw message labels
        messages.forEach(function (m, i) {
            const xPos = XPAD + MESSAGE_LABEL_X_OFFSET + (((m.end - m.start) * VERT_SPACE) / 2) + (m.start * VERT_SPACE);
            const yPos = YPAD + MESSAGE_LABEL_Y_OFFSET + i * MESSAGE_SPACE;

            svg.append("g")
                .attr("transform", "translate(" + xPos + "," + yPos + ")")
                .attr("class", "first")
                .append("text")
                .text(function (d) {
                    return m.message;
                })
                .on("mouseover", function (d) {
                    div.transition()
                        .duration(200)
                        .style("opacity", .9);
                    div.html(m.message)
                        .style("left", (d3.event.pageX) + "px")
                        .style("top", (d3.event.pageY - 28) + "px");
                })
                .on("mouseout", function (d) {
                    div.transition()
                        .duration(500)
                        .style("opacity", 0);
                });
        });

        // Arrow style
        svg.append("svg:defs").selectAll("marker")
            .data(["end"])
            .enter().append("svg:marker")
            .attr("id", String)
            .attr("viewBox", "0 -5 10 10")
            .attr("refX", 10)
            .attr("refY", 0)
            .attr("markerWidth", 10)
            .attr("markerHeight", 10)
            .attr("orient", "auto")
            .append("svg:path")
            .attr("d", "M0,-5L10,0L0,5");

    }
</script>

<body>
<div id="drawArea"></div>
</body>

</html>
